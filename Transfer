import React, { useState } from 'react';
import axios from 'axios';

function App() {
  const [input, setInput] = useState('');
  const [messages, setMessages] = useState([]);
  const [loading, setLoading] = useState(false);

  const sendMessage = async () => {
    if (!input.trim()) return;

    const userMessage = { role: 'user', content: input };
    setMessages([...messages, userMessage]);
    setInput('');
    setLoading(true);

    try {
      const res = await axios.post('http://localhost:8000/agent', {
        message: input,
      });

      const agentMessage = { role: 'agent', content: res.data.response };
      setMessages(prev => [...prev, agentMessage]);
    } catch (error) {
      console.error(error);
      setMessages(prev => [...prev, { role: 'agent', content: '‚ùå Agent error.' }]);
    } finally {
      setLoading(false);
    }
  };

  return (
    <div className="max-w-2xl mx-auto p-6">
      <h1 className="text-2xl font-bold mb-4">LangChain Agent UI (React)</h1>

      <div className="border p-4 rounded h-96 overflow-y-auto mb-4 bg-white shadow">
        {messages.map((msg, idx) => (
          <div key={idx} className={`mb-2 ${msg.role === 'user' ? 'text-right' : 'text-left'}`}>
            <span className={`inline-block px-3 py-2 rounded ${msg.role === 'user' ? 'bg-blue-200' : 'bg-gray-200'}`}>
              {msg.content}
            </span>
          </div>
        ))}
        {loading && <div className="text-sm text-gray-500">Agent is thinking...</div>}
      </div>

      <div className="flex">
        <input
          className="flex-grow p-2 border rounded mr-2"
          value={input}
          onChange={(e) => setInput(e.target.value)}
          placeholder="Ask the agent..."
        />
        <button
          onClick={sendMessage}
          className="bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700"
        >
          Send
        </button>
      </div>
    </div>
  );
}

export default App;
