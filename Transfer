const API_BASE = import.meta.env.VITE_API_BASE ?? "http://localhost:8000";

export async function fetchContainers() {
  const res = await fetch(`${API_BASE}/api/containers`);
  return res.json();
}

export async function fetchHistory(containerId, minutes = 60) {
  const url = new URL(`${API_BASE}/api/metrics/history`);
  url.searchParams.set("container_id", containerId);
  url.searchParams.set("minutes", minutes);
  url.searchParams.set("max_points", 500);
  const res = await fetch(url);
  return res.json();
}



const WS_BASE = (import.meta.env.VITE_WS_BASE ?? "ws://localhost:8000") + "/ws/metrics";

export function openMetricsSocket(onMessage) {
  const ws = new WebSocket(WS_BASE);
  ws.onopen = () => console.log("WS connected");
  ws.onmessage = (evt) => {
    try {
      const msg = JSON.parse(evt.data);
      onMessage?.(msg);
    } catch {}
  };
  ws.onclose = () => console.log("WS closed");
  ws.onerror = (e) => console.error("WS error", e);
  return ws;
}
